name: Api Gateway CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  checkstyle:
    name:  Analyzes source code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Maven checkstyle
        run: mvn checkstyle:check
  tests:
    needs: [ checkstyle ]
    name: Run unitary, integration and CDCT tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Clean
        run: mvn clean
      - name: Run unit tests
        run: mvn test -Punit
      - name: Run integration tests
        run: mvn test -Pit
      - name: Run CDCT consumer tests and generate CDCT contracts
        run: mvn test -PcdctConsumer
      - name: Run CDCT provider tests
        run: mvn test -PcdctProvider
  publish-image:
    needs: [ tests ]
    name: Publish Docker image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: tfm-apigw
      IMAGE_TRUNK_TAG: trunk
      REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Create and publish docker image
        run: mvn compile jib:build -Dimage=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TRUNK_TAG }}
  deploy:
    needs: [ publish-image ]
    name: Deploy in k8s
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - name: Helm Deploy
        uses: vimeda/helm@v1.6.8
        with:
          release: 'apigw-develop'
          namespace: 'tfm-dev-amartinm82'
          chart: './helm/charts'
          values: |
            image:
              tag: trunk
          helm: helm3
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
